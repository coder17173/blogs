<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.njust.blog.dao.UserMapper" >
  <resultMap id="BaseResultMap" type="com.njust.blog.model.UserEntity" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="nickname" property="nickName" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="first_name" property="firstName" jdbcType="VARCHAR" />
    <result column="last_name" property="lastName" jdbcType="VARCHAR" />
  </resultMap>

  <sql id="Base_Column_List" >
    id, nickname, password, first_name, last_name
  </sql>

  <!-- 查询所有 -->
  <select id="selectAll" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user
  </select>

  <!-- 根据ID查询 -->
  <select id="selectByID" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>

  <!-- 删除 -->
  <delete id="deleteByID" parameterType="java.lang.Integer" >
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>

  <!-- 插入 -->
  <insert id="insert" parameterType="com.njust.blog.model.UserEntity" >
    insert into user (nickname, password,
      first_name, last_name)
    values (#{nickName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
      #{firstName,jdbcType=VARCHAR}, #{lastName,jdbcType=VARCHAR})
  </insert>

  <update id="update" parameterType="com.njust.blog.model.UserEntity">
    update user SET nickname=#{nickName,jdbcType=VARCHAR},
    password=#{password,jdbcType=VARCHAR}, first_name=#{firstName,jdbcType=VARCHAR},
    last_name=#{lastName,jdbcType=VARCHAR}
    WHERE id=#{id,jdbcType=INTEGER}
  </update>

</mapper>